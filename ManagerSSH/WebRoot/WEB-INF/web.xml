<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"     
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0">

	<!-- Welcome File List -->
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<!-- WebApp Root，WEB项目的名称，这个可以不用注释掉 -->
	<!-- <context-param>
		<param-name>webAppRootKey</param-name>
		<param-value>SSH</param-value>
	</context-param> -->

	<!-- Spring Encoding Filter（Spring编码过滤器） -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
        </filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>

	<!-- Spring Encoding Filter Mapping（Spring过滤器的映射文件为所有） -->
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>


	<!-- Struts2 Filter（struts2的过滤器） -->
	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>

	<!-- Struts2 Filter Mapping（Struts2的映射文件为所有） -->
	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Log4j ConfigurationFile Location 日志管理器-->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>

	<!-- Spring Log4j Listener 日志管理器的监听-->
	<listener>
		<listener-class>
            org.springframework.web.util.Log4jConfigListener
        </listener-class>
	</listener>

	<!-- Spring ConfigurationFile Location 读取Spring容器的配置文件-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>

	<!-- Spring Context Listener负责启动上面的Spring容器类 -->
	<listener>
		<listener-class>
            org.springframework.web.context.ContextLoaderListener
        </listener-class>
	</listener>

	<!-- Spring Web Request Listener (Spring web请求的监听器) -->
	<listener>
		<listener-class>
            org.springframework.web.context.request.RequestContextListener
        </listener-class>
	</listener>

	<!-- Spring Introspector Cleanup Listener spring容器的缓存清楚，解决长时间使用内存溢出异常 -->
	<listener>
		<listener-class>
            org.springframework.web.util.IntrospectorCleanupListener
        </listener-class>
	</listener>

</web-app>
